@* 
    Model:
      - currentPage:int - Trang hiện tại
      - countPages:int - tổng số trang
      - GetFunc:delegate Func<int?, string> trả về URL tương ứng với trang p (1,2,3 ...)
*@

@model Razor.Helper.PagingModel;
@{
    int currentPage  = Model.currentPage;
    int countPages   = Model.countPages;
    var GetFunc  = Model.GetFunc;
    
    if (currentPage > countPages) 
      currentPage = countPages;

    if (countPages <= 1) return;
    

    int? preview = null;
    int? next = null;

    if (currentPage > 1)
        preview = currentPage - 1;

    if (currentPage < countPages)
        next = currentPage + 1;

    // Các trang hiện thị trong điều hướng
    List<int> pagesRanges = new List<int>();    

        
    int delta      = 5;             // Số trang mở rộng về mỗi bên trang hiện tại     
    int remain     = delta * 2;     // Số trang hai bên trang hiện tại

    pagesRanges.Add(currentPage);
    // Các trang phát triển về hai bên trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (currentPage + i  <= countPages) {
            pagesRanges.Add(currentPage + i); 
            remain --;
        }
               
        if (currentPage - i >= 1) {
            pagesRanges.Insert(0, currentPage - i);
            remain --;
        }
            
    }    
    // Xử lý thêm vào các trang cho đủ remain 
    //(xảy ra ở đầu mút của khoảng trang không đủ trang chèn  vào)
    if (remain > 0) {
        if (pagesRanges[0] == 1) {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.Last() + 1 <= countPages) {
                    pagesRanges.Add(pagesRanges.Last() + 1);
                }
            }
        }
        else {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.First() - 1 > 1) {
                    pagesRanges.Insert(0, pagesRanges.First() - 1);
                }
            }
        }
    }
}

@* PHÁT SINH HTML*@
<div class="row">
	<div class="col-lg-12 text-center">
		<div class="pagination-wrap">
			<ul>
                @if (preview != null)
                {
                     <li><a href="@GetFunc(preview)">Pre</a></li>
                }
                @foreach (var pageitem in pagesRanges)
                {
                    if (pageitem == currentPage) {
                        <li><a class="active" href= "@GetFunc(pageitem)">@pageitem</a></li>
                    }   
                    else 
                    {
                         <li><a href= "@GetFunc(pageitem)">@pageitem</a></li>
                    }
                }
                    @if (next != null)
                    {
                        <li><a href="@GetFunc(next)">Next</a></li>
                    }
			</ul>
		</div>
	</div>
</div>
